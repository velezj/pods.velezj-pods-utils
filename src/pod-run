
##
# Fist, find the build directory for PODS from the current directory
# Figure out where we build the software.
#   Use BUILD_PREFIX if it was passed in.
#   If not, search up to four parent directories for a 'build' directory.
#   Otherwise, use ./build.
if [ "$BUILD_PREFIX" = "" ]; then
    for pfx in ./ .. ../.. ../../.. ../../../..; do d=`pwd`/$pfx/build;
        if [ -d $d ]; then 
	    BUILD_PREFIX=$d; 
	    break; 
	fi; 
    done;
    if [ "$BUILD_PREFIX" = "" ]; then
	#BUILD_PREFIX=`pwd`/build;
	BUILD_PREFIX=""
    fi
fi
BUILD_PREFIX=$(readlink -f $BUILD_PREFIX)
echo "BUILD_PREFIX = $BUILD_PREFIX"


##
# Ok, now that we have the BUILD_PREFIX, setup the PATH and
# environment to look at hte build prefix first
export PATH=$BUILD_PREFIX/bin:$PATH
export PKG_CONFIG_PATH=$BUILD_PREFIX/lib/pkgconfig:$PKG_CONFIG_PATH
export CFLAGS="-I$BUILD_PREFIX/include $CFLAGS"
export CPPFLAGS="-I$BUILD_PREFIX/include $CPPFLAGS"
export CXXFLAGS="-I$BUILD_PREFIX/include $CXXFLAGS"
export LDFLAGS="-L$BUILD_PREFIX/lib/ $LDFLAGS"
export LD_LIBARRY_PATH=$BUILD_PREFIX/lib/:$LD_LIBARRY_PATH
export PYTHONPATH=$BUILD_PREFIX/lib/python2.7/site-packages:$PYTHONPATH

##
# Ok, add enviroment variables so that script know they are being called with
# pod-run
export POD_RUN_SCOPE=1
export POD_RUN_COMMAND_LINE=$*


##
# check if the command exists in the build prefix/bin, and if so then
# append the build prefix/bin to it (this is so that completion works well)
cmd=$1
if [ -e ${BUILD_PREFIX}/bin/$1 ]; then
    cmd=${BUILD_PREFIX}/bin/$1;
fi


##
# Run the command
if [ -e ${BUILD_PREFIX}/bin/$1 ]; then
    ${BUILD_PREFIX}/bin/$*;
else
    $*
fi




